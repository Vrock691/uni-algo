# Algorithmes textuels

# Exercice 1 : Algorithme Recherche de lettre dans une chaîne

Procédure Compter(mot, lettre : chaine)
    Variables
        NombreLettre : entier
        caractère : chaine
    Début 
        Pour caractère dans mot Faire
            Si caractère == lettre Alors NombreLettre = NombreLettre + 1
            Fin Si
        Fin Pour
        Retourner NombreLettre
    Fin
    
# Exercice 2 : Algorithme Recherche de lettre distincte

Procédure Dinstincts(mot : chaine)
    Variables 
        lettre, lettre_fini : chaine
        lettre_unique : TABLEAU 
        i : entier
    
    Début
        lettre = mot
        


# Exercice 3 : Algorithme comptage des lettres d'un mot

Procédure frequences(mot : chaine)
    Variables
        Dico = Dictionnaire  {

        }

# Exercice 4 

Algorithme inclusion
    var 
        mot_1 : chaines 
        mot_2 : chaines
    Début
        mot_1=mot_1.upper()
        mot_2=mot_2.upper()
    Si mot_1 est dans mot_2:
        écrire True
    Sinon:
        écrire False
    Fin

# Exercice 5

Algorithme annagrammes
    var 
        mot_1 : chaines 
        mot_2 : chaines
    Début
        anagrammes = 0
        Si longueur mot_1 !=longueur mot_2 :
            rep = False
        Sinon:
            Pour chaque lettres1 dans mot_1:
                Pour chaque lettres2 dans mot_2:
                    Si lettres1 == lettres2:
                        anagrammes +=1
            Si anagrammes == longueur mot_2:
                rep = True
        écrire rep
    Fin


# Exercice 6
Algorithme ChiffreCesar
	var 
		mot : chaines
		decalage : entier
	Début
		alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
		mot = mot en MAJUSCULE
		nouveauMot=""
		Pour chaque lettres dans le mot :
			Pour chaque indice de 0 à la longueur d’alphabet :
				Si lettres = alphabet[indice] et indice < ou = 26 – decalage :
					indiceLettres = indice + decalage
					nouveauMot+= alphabet[indiceLettres]
				Sinon si ettres = alphabet[indice] et indice > 26 – decalage :
					Nouveaudecalage = indice + decalage - 26
					indiceLettres = Nouveaudecalage
					nouveauMot+=alphabet[indiceLettres]
		écrire nouveauMot
	Fin